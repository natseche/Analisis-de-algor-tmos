def LCS_mem(X, Y):
    m = len(X)
    n = len(Y)

    # Tabla de memoizaciÃ³n
    Z = [[0] * (n + 1) for _ in range(m + 1)]

    for i in range(1, m + 1):
        for j in range(1, n + 1):
            if X[i - 1] == Y[j - 1]:
                Z[i][j] = Z[i - 1][j - 1] + 1
            else:
                Z[i][j] = max(Z[i - 1][j], Z[i][j - 1])

    
    def LCS(i, j):
        lcs = []
        while i > 0 and j > 0:
            if X[i - 1] == Y[j - 1]:
                lcs.append(X[i - 1])
                i -= 1
                j -= 1
            elif Z[i - 1][j] >= Z[i][j - 1]:
                i -= 1
            else:
                j -= 1
        return lcs[::-1] 

    
    lcs = LCS(m, n)
    return (len(lcs), lcs)


W1 = ["A", "B", "C", "B", "D", "A", "B"]
P1 = ["B", "D", "C", "A", "B", "A"]

A1 = [1, 0, 0, 1, 0, 1, 0, 1]
B1 = [0, 1, 0, 1, 1, 0, 1, 1, 0]

print(LCS_mem(W1, P1))  
print(LCS_mem(A1, B1))  
